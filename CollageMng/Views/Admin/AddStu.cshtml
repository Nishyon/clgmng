@model CollageMng.Models.Studata
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="alert alert-danger">
        @ViewBag.Message
    </div>
}
<div class="card">
    <div class="card-header">
        <h4>Add Student </h4>
    </div>
    <form method="post" asp-action="AddStu" asp-controller="AdminController" enctype="multipart/form-data">
        <div class="card-body">
            <div class="form-group row">
                <label for="inputSrno" class="col-sm-3 col-form-label">Student Number</label>
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Stuno, new { type = "text", @class = "form-control", id = "inputSrno", placeholder = "Serial Number", required = "required" })
                </div>
            </div>
            <div class="form-group row">
                <label for="inputUsername3" class="col-sm-3 col-form-label">Username</label>
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Username, new { type = "text", @class = "form-control", id = "inputUsername3", placeholder = "Username", required = "required" })
                </div>
            </div>
            <div class="form-group row">
                <label for="inputEmail3" class="col-sm-3 col-form-label">Email</label>
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Email, new { type = "email", @class = "form-control", id = "inputEmail3", placeholder = "Email", required = "required" })
                </div>
            </div>
            <div class="form-group row">
                <label for="inputPhone3" class="col-sm-3 col-form-label">Phone number</label>
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Phone, new { type = "text", @class = "form-control", id = "inputPhone3", placeholder = "Phone number", required = "required" })
                </div>
            </div>
            <div class="form-group row">
                <label for="file" class="col-sm-3 col-form-label">Profile Photo</label>
                <div class="col-sm-9">
                    <input type="file" name="file" id="file" class="form-control" />

                </div>
            </div>
            <div class="form-group row">
                <label for="inputPassword3" class="col-sm-3 col-form-label">Password</label>
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.Password, new { type = "password", @class = "form-control", id = "inputPassword3", placeholder = "Password", required = "required" })
                </div>
            </div>
           
            <div class="form-group row">
                <label for="dname" class="col-sm-3 col-form-label">Department Name</label>
                <div class="col-sm-9">
                    <select class="custom-select" id="dname" name="dname" onchange="updateSecondSelect()">
                        <option value="mca" selected>MCA</option>
                        <option value="mba">MBA</option>
                        <option value="ic">I-MCA</option>
                        <option value="mam">I-MBA</option>
                    </select>
                </div>
            </div>
            <div class="form-group row">
                <label for="sem" class="col-sm-3 col-form-label">Semester</label>
                <div class="col-sm-9">
                    <select class="custom-select" id="sem" name="sem">
                        <option value=1 selected>1</option>
                        <option value=2>2</option>
                        <option value=3>3</option>
                        <option value=4>4</option>

                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-form-label col-sm-3 pt-0">Fees Status</div>
                <div class="col-sm-9">
                    <div class="form-check">
                        <div class="custom-control custom-radio">
                            @Html.RadioButtonFor(model => model.Feestatus, true, new { type = "radio", name = "customRadio", @class = "custom-control-input", id = "customRadio3", @checked = "checked" })
                            <label class="custom-control-label" for="customRadio3">Done</label>
                        </div>
                        <div class="custom-control custom-radio">
                            @Html.RadioButtonFor(model => model.Feestatus, false, new { type = "radio", name = "customRadio", @class = "custom-control-input", id = "customRadio2" })
                            <label class="custom-control-label" for="customRadio2">Pending</label>
                        </div>
                    
                    </div>
                </div>
            </div>



        </div>
        <div class="card-footer">
            <input type="submit" class="btn btn-primary" value="Add Student" />
        </div>

    </form>
</div>


<script>

     window.onload = function() {
        document.getElementById('customRadio3').checked = true;
    };

    function updateSecondSelect() {
        // Get the value of the first select box
        var firstSelectValue = document.getElementById("dname").value;

        // Select the second select box
        var secondSelect = document.getElementById("sem");

        // Clear existing options
        secondSelect.innerHTML = "";

        // Depending on the value of the first select box, populate the second select box with different options
        switch (firstSelectValue) {
            case "mba":
                secondSelect.options.add(new Option(1, 1));
                secondSelect.options.add(new Option(2, 2));
                secondSelect.options.add(new Option(3, 3));
                secondSelect.options.add(new Option(4, 4));
                break;
            case "mca":
                secondSelect.options.add(new Option(1, 1));
                secondSelect.options.add(new Option(2, 2));
                secondSelect.options.add(new Option(3, 3));
                secondSelect.options.add(new Option(4, 4));
                break;
            default:
                secondSelect.options.add(new Option(1, 1));
                secondSelect.options.add(new Option(2, 2));
                secondSelect.options.add(new Option(3, 3));
                secondSelect.options.add(new Option(4, 4));
                secondSelect.options.add(new Option(5, 5));
                secondSelect.options.add(new Option(6, 6));
                secondSelect.options.add(new Option(7, 7));
                secondSelect.options.add(new Option(8, 8));
                secondSelect.options.add(new Option(9, 9));
                secondSelect.options.add(new Option(10, 10));
                // Handle unexpected value
                break;
        }
    }
</script>